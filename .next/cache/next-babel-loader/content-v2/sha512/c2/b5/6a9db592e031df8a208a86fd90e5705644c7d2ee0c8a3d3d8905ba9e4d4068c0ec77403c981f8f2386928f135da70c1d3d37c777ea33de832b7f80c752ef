{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\main\\\\NextjsProjects\\\\NextjsCourse\\\\sample-app\\\\pages\\\\events\\\\[...slug].jsx\",\n    _this = this;\n\nimport React from 'react';\nimport Head from 'next/head';\nimport EventList from '../../components/events/event-list/event-list';\nimport Button from '../../components/ui/button/button';\nimport ErrorAlert from '../../components/ui/error-alert/error-alert';\nimport ResultsTitle from '../../components/events/results-title/results-title';\n\nvar FilteredEvents = function FilteredEvents(_ref) {\n  var hasError = _ref.hasError,\n      events = _ref.events,\n      date = _ref.date;\n\n  var pageContent = /*#__PURE__*/_jsxDEV(Head, {\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Filtered Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"description\",\n      content: 'All Events for filtered event'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n\n  if (hasError) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [pageContent, /*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Invalid filtered. Please adjust your values!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true);\n  }\n\n  if (!events || events.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [pageContent, /*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No events found for the chosen filter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true);\n  }\n\n  var newDate = new Date(date.year, date.month - 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-slug\",\n    children: [pageContent, /*#__PURE__*/_jsxDEV(ResultsTitle, {\n      date: newDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(EventList, {\n      items: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = FilteredEvents;\nexport var __N_SSP = true;\nexport default FilteredEvents;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteredEvents\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/main/NextjsProjects/NextjsCourse/sample-app/pages/events/[...slug].jsx"],"names":["React","Head","EventList","Button","ErrorAlert","ResultsTitle","FilteredEvents","hasError","events","date","pageContent","length","newDate","Date","year","month"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,SAAP,MAAsB,+CAAtB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,UAAP,MAAuB,6CAAvB;AACA,OAAOC,YAAP,MAAyB,qDAAzB;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAgC;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAnBC,MAAmB,QAAnBA,MAAmB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AACrD,MAAMC,WAAW,gBACf,QAAC,IAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;;AAOA,MAAIH,QAAJ,EAAc;AACZ,wBACE;AAAA,iBACGG,WADH,eAEE,QAAC,UAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAFF,eAKE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eALF;AAAA,oBADF;AAWD;;AAED,MAAI,CAACF,MAAD,IAAWA,MAAM,CAACG,MAAP,KAAkB,CAAjC,EAAoC;AAClC,wBACE;AAAA,iBACGD,WADH,eAEE,QAAC,UAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAFF,eAKE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eALF;AAAA,oBADF;AAWD;;AAED,MAAME,OAAO,GAAG,IAAIC,IAAJ,CAASJ,IAAI,CAACK,IAAd,EAAoBL,IAAI,CAACM,KAAL,GAAa,CAAjC,CAAhB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,eACGL,WADH,eAEE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEE;AAApB;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEJ;AAAlB;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CA7CD;;KAAMF,c;;AA+EN,eAAeA,cAAf","sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\n\r\nimport EventList from '../../components/events/event-list/event-list';\r\nimport Button from '../../components/ui/button/button';\r\nimport ErrorAlert from '../../components/ui/error-alert/error-alert';\r\nimport ResultsTitle from '../../components/events/results-title/results-title';\r\nimport { getFilteredEvents } from '../../helpers/api-utils';\r\n\r\nconst FilteredEvents = ({ hasError, events, date }) => {\r\n  const pageContent = (\r\n    <Head>\r\n      <title>Filtered Events</title>\r\n      <meta name='description' content={'All Events for filtered event'} />\r\n    </Head>\r\n  );\r\n\r\n  if (hasError) {\r\n    return (\r\n      <>\r\n        {pageContent}\r\n        <ErrorAlert>\r\n          <p>Invalid filtered. Please adjust your values!</p>\r\n        </ErrorAlert>\r\n        <div className='center'>\r\n          <Button link='/events'>Show All Events</Button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (!events || events.length === 0) {\r\n    return (\r\n      <>\r\n        {pageContent}\r\n        <ErrorAlert>\r\n          <p>No events found for the chosen filter!</p>\r\n        </ErrorAlert>\r\n        <div className='center'>\r\n          <Button link='/events'>Show All Events</Button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  const newDate = new Date(date.year, date.month - 1);\r\n\r\n  return (\r\n    <div className='event-slug'>\r\n      {pageContent}\r\n      <ResultsTitle date={newDate} />\r\n      <EventList items={events} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = async ({ params }) => {\r\n  const filterData = params.slug;\r\n\r\n  const numYear = +filterData[0];\r\n  const numMonth = +filterData[1];\r\n\r\n  if (\r\n    isNaN(numYear) ||\r\n    isNaN(numMonth) ||\r\n    numYear > 2030 ||\r\n    numMonth > 12 ||\r\n    numMonth < 1\r\n  ) {\r\n    return {\r\n      props: { hasError: true },\r\n    };\r\n  }\r\n\r\n  const filteredEvents = await getFilteredEvents({\r\n    year: numYear,\r\n    month: numMonth,\r\n  });\r\n\r\n  return {\r\n    props: {\r\n      events: filteredEvents,\r\n      hasError: false,\r\n      date: { year: numYear, month: numMonth },\r\n    },\r\n  };\r\n};\r\n\r\nexport default FilteredEvents;\r\n"]},"metadata":{},"sourceType":"module"}