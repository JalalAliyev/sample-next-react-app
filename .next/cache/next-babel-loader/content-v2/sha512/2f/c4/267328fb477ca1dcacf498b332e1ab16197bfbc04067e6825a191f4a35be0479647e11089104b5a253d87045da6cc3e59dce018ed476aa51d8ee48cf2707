{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\main\\\\NextjsProjects\\\\NextjsCourse\\\\sample-app\\\\pages\\\\events\\\\[...slug].jsx\";\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { getFilteredEvents } from '../../dummy-data';\nimport EventList from '../../components/events/event-list/event-list';\n\nconst FilteredEvents = () => {\n  const router = useRouter();\n  const filterData = router.query.slug;\n\n  if (!year || !month) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  const numYear = +filter;\n  const numMonth = +month;\n\n  if (isNaN(numYear) || isNaN(numMonth) || numYear > 2030 || numMonth > 12 || numMonth < 1) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Invalid filtered. Please adjust your values!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  const filteredData = {\n    year: numYear,\n    month: numMonth\n  };\n  const filteredEvents = getFilteredEvents(filteredData);\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No events found for the chosen filter!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-slug\",\n    children: /*#__PURE__*/_jsxDEV(EventList, {\n      items: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\nexport default FilteredEvents;","map":{"version":3,"sources":["C:/Users/HP/Desktop/main/NextjsProjects/NextjsCourse/sample-app/pages/events/[...slug].jsx"],"names":["React","useRouter","getFilteredEvents","EventList","FilteredEvents","router","filterData","query","slug","year","month","numYear","filter","numMonth","isNaN","filteredData","filteredEvents","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,SAAP,MAAsB,+CAAtB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,QAAMK,UAAU,GAAGD,MAAM,CAACE,KAAP,CAAaC,IAAhC;;AAEA,MAAI,CAACC,IAAD,IAAS,CAACC,KAAd,EAAqB;AACnB,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAMC,OAAO,GAAG,CAACC,MAAjB;AACA,QAAMC,QAAQ,GAAG,CAACH,KAAlB;;AAEA,MACEI,KAAK,CAACH,OAAD,CAAL,IACAG,KAAK,CAACD,QAAD,CADL,IAEAF,OAAO,GAAG,IAFV,IAGAE,QAAQ,GAAG,EAHX,IAIAA,QAAQ,GAAG,CALb,EAME;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAME,YAAY,GAAG;AAAEN,IAAAA,IAAI,EAAEE,OAAR;AAAiBD,IAAAA,KAAK,EAAEG;AAAxB,GAArB;AAEA,QAAMG,cAAc,GAAGd,iBAAiB,CAACa,YAAD,CAAxC;;AAEA,MAAI,CAACC,cAAD,IAAmBA,cAAc,CAACC,MAAf,KAA0B,CAAjD,EAAoD;AAClD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlCD;;AAoCA,eAAeZ,cAAf","sourcesContent":["import React from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { getFilteredEvents } from '../../dummy-data';\r\nimport EventList from '../../components/events/event-list/event-list'\r\n\r\nconst FilteredEvents = () => {\r\n  const router = useRouter();\r\n\r\n  const filterData = router.query.slug;\r\n\r\n  if (!year || !month) {\r\n    return <p className='center'>Loading</p>;\r\n  }\r\n\r\n  const numYear = +filter;\r\n  const numMonth = +month;\r\n\r\n  if (\r\n    isNaN(numYear) ||\r\n    isNaN(numMonth) ||\r\n    numYear > 2030 ||\r\n    numMonth > 12 ||\r\n    numMonth < 1\r\n  ) {\r\n    return <p>Invalid filtered. Please adjust your values!</p>;\r\n  }\r\n\r\n  const filteredData = { year: numYear, month: numMonth };\r\n\r\n  const filteredEvents = getFilteredEvents(filteredData);\r\n\r\n  if (!filteredEvents || filteredEvents.length === 0) {\r\n    return <p>No events found for the chosen filter!</p>;\r\n  }\r\n  return (\r\n    <div className='event-slug'>\r\n      <EventList items={filteredEvents} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilteredEvents;\r\n"]},"metadata":{},"sourceType":"module"}