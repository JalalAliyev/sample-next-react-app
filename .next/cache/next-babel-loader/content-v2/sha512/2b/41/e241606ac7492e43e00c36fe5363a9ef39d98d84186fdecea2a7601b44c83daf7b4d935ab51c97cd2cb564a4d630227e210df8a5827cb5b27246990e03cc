{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Desktop/main/NextjsProjects/NextjsCourse/sample-app/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"C:/Users/HP/Desktop/main/NextjsProjects/NextjsCourse/sample-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"C:/Users/HP/Desktop/main/NextjsProjects/NextjsCourse/sample-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var getAllEvents = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response, data, events, key;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://nextjs-project-7f885-default-rtdb.firebaseio.com/events.json');\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context.sent;\n            events = [];\n\n            for (key in data) {\n              events.push(_objectSpread({\n                id: key\n              }, data[key]));\n            }\n\n            return _context.abrupt(\"return\", events);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAllEvents() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getFeaturedEvents = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var allEvents, featuredEvents;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getAllEvents();\n\n          case 2:\n            allEvents = _context2.sent;\n            featuredEvents = allEvents.filter(function (event) {\n              return event.isFeatured;\n            });\n            return _context2.abrupt(\"return\", featuredEvents);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getFeaturedEvents() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getEventById = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n    var events;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return getAllEvents();\n\n          case 2:\n            events = _context3.sent;\n            return _context3.abrupt(\"return\", events.find(function (event) {\n              return event.id === id;\n            }));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getEventById(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/HP/Desktop/main/NextjsProjects/NextjsCourse/sample-app/helpers/api-utils.js"],"names":["getAllEvents","fetch","response","json","data","events","key","push","id","getFeaturedEvents","allEvents","featuredEvents","filter","event","isFeatured","getEventById","find"],"mappings":";;;;;;;;AAAA,OAAO,IAAMA,YAAY;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHC,KAAK,CAC1B,sEAD0B,CADF;;AAAA;AACpBC,YAAAA,QADoB;AAAA;AAAA,mBAIPA,QAAQ,CAACC,IAAT,EAJO;;AAAA;AAIpBC,YAAAA,IAJoB;AAMtBC,YAAAA,MANsB,GAMb,EANa;;AAO1B,iBAAWC,GAAX,IAAkBF,IAAlB,EAAwB;AACtBC,cAAAA,MAAM,CAACE,IAAP;AAAcC,gBAAAA,EAAE,EAAEF;AAAlB,iBAA0BF,IAAI,CAACE,GAAD,CAA9B;AACD;;AATyB,6CAUnBD,MAVmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZL,YAAY;AAAA;AAAA;AAAA,GAAlB;AAaP,OAAO,IAAMS,iBAAiB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPT,YAAY,EADL;;AAAA;AACzBU,YAAAA,SADyB;AAEzBC,YAAAA,cAFyB,GAERD,SAAS,CAACE,MAAV,CAAiB,UAACC,KAAD;AAAA,qBAAWA,KAAK,CAACC,UAAjB;AAAA,aAAjB,CAFQ;AAAA,8CAGxBH,cAHwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBF,iBAAiB;AAAA;AAAA;AAAA,GAAvB;AAMP,OAAO,IAAMM,YAAY;AAAA,uEAAG,kBAAOP,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLR,YAAY,EADP;;AAAA;AACpBK,YAAAA,MADoB;AAAA,8CAEnBA,MAAM,CAACW,IAAP,CAAY,UAACH,KAAD;AAAA,qBAAWA,KAAK,CAACL,EAAN,KAAaA,EAAxB;AAAA,aAAZ,CAFmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZO,YAAY;AAAA;AAAA;AAAA,GAAlB","sourcesContent":["export const getAllEvents = async () => {\r\n  const response = await fetch(\r\n    'https://nextjs-project-7f885-default-rtdb.firebaseio.com/events.json'\r\n  );\r\n  const data = await response.json();\r\n\r\n  let events = [];\r\n  for (const key in data) {\r\n    events.push({ id: key, ...data[key] });\r\n  }\r\n  return events;\r\n};\r\n\r\nexport const getFeaturedEvents = async () => {\r\n  const allEvents = await getAllEvents();\r\n  const featuredEvents = allEvents.filter((event) => event.isFeatured);\r\n  return featuredEvents;\r\n};\r\n\r\nexport const getEventById = async (id) => {\r\n  const events = await getAllEvents();\r\n  return events.find((event) => event.id === id);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}