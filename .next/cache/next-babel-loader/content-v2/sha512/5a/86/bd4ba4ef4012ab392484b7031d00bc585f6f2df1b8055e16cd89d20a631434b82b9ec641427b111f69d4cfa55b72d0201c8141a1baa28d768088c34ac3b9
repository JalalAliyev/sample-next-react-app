{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\main\\\\NextjsProjects\\\\NextjsCourse\\\\sample-app\\\\pages\\\\events\\\\[eventId].jsx\";\nimport React from 'react';\nimport EventSummary from '../../components/event-details/event-summary/event-summary';\nimport EventLogistics from '../../components/event-details/event-logistics/event-logistics';\nimport EventContent from '../../components/event-details/event-content/event-content';\nimport { getAllEvents, getEventById } from '../../helpers/api-utils';\n\nconst EventDetail = ({\n  event\n}) => {\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No event found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventSummary, {\n      title: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventLogistics, {\n      date: event.date,\n      address: event.location,\n      image: event.image,\n      imageAlt: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventContent, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default EventDetail;\nexport const getStaticPaths = async () => {\n  const allEvents = await getAllEvents();\n  const paths = allEvents.map(event => ({\n    params: {\n      eventsId: event.id\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const {\n    eventId\n  } = params;\n  const currentEvent = await getEventById(eventId);\n  return {\n    props: {\n      event: currentEvent\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/HP/Desktop/main/NextjsProjects/NextjsCourse/sample-app/pages/events/[eventId].jsx"],"names":["React","EventSummary","EventLogistics","EventContent","getAllEvents","getEventById","EventDetail","event","title","date","location","image","description","getStaticPaths","allEvents","paths","map","params","eventsId","id","fallback","getStaticProps","eventId","currentEvent","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,4DAAzB;AACA,OAAOC,cAAP,MAA2B,gEAA3B;AACA,OAAOC,YAAP,MAAyB,4DAAzB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,yBAA3C;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACjC,MAAI,CAACA,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AACE,MAAA,IAAI,EAAED,KAAK,CAACE,IADd;AAEE,MAAA,OAAO,EAAEF,KAAK,CAACG,QAFjB;AAGE,MAAA,KAAK,EAAEH,KAAK,CAACI,KAHf;AAIE,MAAA,QAAQ,EAAEJ,KAAK,CAACC;AAJlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE,QAAC,YAAD;AAAA,6BACE;AAAA,kBAAID,KAAK,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAcD,CAnBD;;AAqBA,eAAeN,WAAf;AAEA,OAAO,MAAMO,cAAc,GAAG,YAAY;AACxC,QAAMC,SAAS,GAAG,MAAMV,YAAY,EAApC;AAEA,QAAMW,KAAK,GAAGD,SAAS,CAACE,GAAV,CAAeT,KAAD,KAAY;AACtCU,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAEX,KAAK,CAACY;AAAlB;AAD8B,GAAZ,CAAd,CAAd;AAIA,SAAO;AAAEJ,IAAAA,KAAF;AAASK,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD,CARM;AAUP,OAAO,MAAMC,cAAc,GAAG,OAAO;AAAEJ,EAAAA;AAAF,CAAP,KAAsB;AAClD,QAAM;AAAEK,IAAAA;AAAF,MAAcL,MAApB;AACA,QAAMM,YAAY,GAAG,MAAMlB,YAAY,CAACiB,OAAD,CAAvC;AAEA,SAAO;AAAEE,IAAAA,KAAK,EAAE;AAAEjB,MAAAA,KAAK,EAAEgB;AAAT;AAAT,GAAP;AACD,CALM","sourcesContent":["import React from 'react';\r\n\r\nimport EventSummary from '../../components/event-details/event-summary/event-summary';\r\nimport EventLogistics from '../../components/event-details/event-logistics/event-logistics';\r\nimport EventContent from '../../components/event-details/event-content/event-content';\r\nimport { getAllEvents, getEventById } from '../../helpers/api-utils';\r\n\r\nconst EventDetail = ({ event }) => {\r\n  if (!event) {\r\n    return <p>No event found!</p>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <EventSummary title={event.title} />\r\n      <EventLogistics\r\n        date={event.date}\r\n        address={event.location}\r\n        image={event.image}\r\n        imageAlt={event.title}\r\n      />\r\n      <EventContent>\r\n        <p>{event.description}</p>\r\n      </EventContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventDetail;\r\n\r\nexport const getStaticPaths = async () => {\r\n  const allEvents = await getAllEvents();\r\n\r\n  const paths = allEvents.map((event) => ({\r\n    params: { eventsId: event.id },\r\n  }));\r\n\r\n  return { paths, fallback: false };\r\n};\r\n\r\nexport const getStaticProps = async ({ params }) => {\r\n  const { eventId } = params;\r\n  const currentEvent = await getEventById(eventId);\r\n\r\n  return { props: { event: currentEvent } };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}