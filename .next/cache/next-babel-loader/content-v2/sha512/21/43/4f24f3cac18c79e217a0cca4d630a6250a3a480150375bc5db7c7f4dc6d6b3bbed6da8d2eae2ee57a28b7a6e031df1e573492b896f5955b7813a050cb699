{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\main\\\\NextjsProjects\\\\NextjsCourse\\\\sample-app\\\\pages\\\\events\\\\index.jsx\";\nimport { useRouter } from 'next/router';\nimport { getAllEvents } from '../../dummy-data';\nimport EventList from '../../components/events/event-list/event-list';\nimport EventsSearch from '../../components/events/events-search/events-search';\n\nconst Events = allEvents => {\n  console.log('all');\n  const router = useRouter();\n  const events = getAllEvents();\n\n  const findEventsHandler = (year, month) => {\n    const fullPath = `/events/${year}/${month}`;\n    router.push(fullPath);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventsSearch, {\n      onSearch: findEventsHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      items: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Events;\nexport const getStaticProps = async () => {\n  const events = await getAllEvents();\n  return {\n    props: {\n      allEvents: events\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/HP/Desktop/main/NextjsProjects/NextjsCourse/sample-app/pages/events/index.jsx"],"names":["useRouter","getAllEvents","EventList","EventsSearch","Events","allEvents","console","log","router","events","findEventsHandler","year","month","fullPath","push","getStaticProps","props"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,SAAP,MAAsB,+CAAtB;AACA,OAAOC,YAAP,MAAyB,qDAAzB;;AAEA,MAAMC,MAAM,GAAIC,SAAD,IAAe;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,MAAM,GAAGR,YAAY,EAA3B;;AAEA,QAAMS,iBAAiB,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzC,UAAMC,QAAQ,GAAI,WAAUF,IAAK,IAAGC,KAAM,EAA1C;AACAJ,IAAAA,MAAM,CAACM,IAAP,CAAYD,QAAZ;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEH;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAhBD;;AAkBA,eAAeL,MAAf;AAEA,OAAO,MAAMW,cAAc,GAAG,YAAY;AACxC,QAAMN,MAAM,GAAG,MAAMR,YAAY,EAAjC;AAEA,SAAO;AACLe,IAAAA,KAAK,EAAE;AACLX,MAAAA,SAAS,EAAEI;AADN;AADF,GAAP;AAKD,CARM","sourcesContent":["import { useRouter } from 'next/router';\r\nimport { getAllEvents } from '../../dummy-data';\r\nimport EventList from '../../components/events/event-list/event-list';\r\nimport EventsSearch from '../../components/events/events-search/events-search';\r\n\r\nconst Events = (allEvents) => {\r\n  console.log('all');\r\n  const router = useRouter();\r\n  const events = getAllEvents();\r\n\r\n  const findEventsHandler = (year, month) => {\r\n    const fullPath = `/events/${year}/${month}`;\r\n    router.push(fullPath);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <EventsSearch onSearch={findEventsHandler} />\r\n      <EventList items={events} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n\r\nexport const getStaticProps = async () => {\r\n  const events = await getAllEvents();\r\n\r\n  return {\r\n    props: {\r\n      allEvents: events,\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}